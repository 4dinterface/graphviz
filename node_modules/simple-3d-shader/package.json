{
  "name": "simple-3d-shader",
  "version": "0.0.0",
  "description": "A simple 3d shader for webgl",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "dependencies": {
    "gl-shader": "~0.0.4"
  },
  "devDependencies": {
    "bunny": "~1.0.0",
    "gl-matrix": "~2.0.0",
    "gl-mesh": "~0.0.0",
    "gl-now": "~0.0.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/simple-3d-shader.git"
  },
  "keywords": [
    "simple",
    "3d",
    "shader",
    "webgl"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "58b5968a4ce099831d0b52783b9cf311e95512a0",
  "bugs": {
    "url": "https://github.com/mikolalysenko/simple-3d-shader/issues"
  },
  "readme": "simple-3d-shader\n================\nA simple 3d shader for WebGL\n\n## Example\n\n[Try it in your browser](http://mikolalysenko.github.io/simple-3d-shader/)\n\n```javascript\nvar shell = require(\"gl-now\")()\nvar createMesh = require(\"gl-mesh\")\nvar glm = require(\"gl-matrix\")\nvar simple3DShader = require(\"simple-3d-shader\")\n\nvar shader, mesh\n\nshell.on(\"gl-init\", function() {\n  shader = simple3DShader(shell.gl)\n  mesh = createMesh(shell.gl, require(\"bunny\"))\n})\n\nshell.on(\"gl-render\", function(t) {\n  //Bind shader\n  shader.bind()\n  \n  //Set camera parameters\n  var A = new Float32Array(16), B = new Float32Array(16)\n  shader.uniforms.projection = glm.mat4.perspective(A, Math.PI/4.0, shell.width/shell.height, 0.1, 1000.0)\n  shader.uniforms.view = glm.mat4.lookAt(A, [0, 3, 20], [0, 3, 0], [0,1,0])\n  glm.mat4.identity(A)\n  shader.uniforms.model = glm.mat4.rotateY(B, A, 0.001 * Date.now())\n  \n  //Set color\n  shader.attributes.color = [1, 0.7, 0.3]\n  \n  //Draw object\n  mesh.bind(shader)\n  mesh.draw()\n  mesh.unbind()\n})\n```\n\nHere is what it should look like assuming everything worked:\n\n<img src=\"https://raw.github.com/mikolalysenko/simple-3d-shader/master/images/screenshot.png\">\n\n\n## Install\n\nUse [npm](https://npmjs.org/) to install it locally:\n\n    npm install simple-3d-shader\n    \nThen you can build/run the client using any tool that compiles CommonJS modules, for example [browserify](https://github.com/substack/node-browserify) or [beefy](https://github.com/chrisdickinson/beefy).\n\n## API\n\n```javascript\nvar simple3DShader = require(\"simple-3d-shader\")\n```\n\n### `var shader = simple3DShader(gl)`\nCreates a simple 3d shader\n\n* `gl` is a handle to the WebGL context that the shader will be created in.\n\n**Returns** A `gl-shader` object for the shader.\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "_id": "simple-3d-shader@0.0.0",
  "dist": {
    "shasum": "b0193c705d053561f8a53aef321ac7c851184f70",
    "tarball": "http://registry.npmjs.org/simple-3d-shader/-/simple-3d-shader-0.0.0.tgz"
  },
  "_from": "simple-3d-shader@",
  "_npmVersion": "1.2.24",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "_shasum": "b0193c705d053561f8a53aef321ac7c851184f70",
  "_resolved": "https://registry.npmjs.org/simple-3d-shader/-/simple-3d-shader-0.0.0.tgz"
}
